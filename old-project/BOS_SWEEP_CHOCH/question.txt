-bạn với mình cùng nhau tạo ra 1 HL HH LH LL chính xác nhất để tìm ra  BOS , sweep $$$ , ChoCh , FVG trên ChoCH
-sẽ làm indicator của mt5 ngon lành hết , mới bắt đầu tạo bot EA mt5 với cách tìm như Indicator để tìm ra entry 
-First plan: HL HH LH LL chính xác nhất 
ý tưởng của mình:
- bỏ qua history nến trước đó , mình phải làm đủ giỏi trong việc chart giá đang chạy
- confirm HL HH LH LL H L khi đóng nến để bảo đảm performance , ko theo tick
- có 6 loại enum: HL ,HH , LH , LL , H , L
- 1 swing tăng array = [HL,HH,HL,HH] equal
- 1 swing giảm array = [LH,LL,LH,LL] equal
- i là index của array bắt đầu đếm từ 0,1,2,3,.......
- quy ước range = {A,B} -> A là giá thấp nhất , B là giá cao nhất
- biên A là giá thấp nhất của range , nếu -Infinity thì ko có biên A
- biên B là giá cao nhất của range , nếu +Infinity thì ko có biên B
- quy ước retest là mình có 1 range A,B  giá phải retest hơn 20% của A-B , tránh retest quá nông , retest quá nhẹ => làm sai phương pháp, và nặng performance nữa
- ví dụ của retest: range {i1 , +Infinity} , giá đang tăng lên , đợi giá retest -> retest xảy ra -> tìm dc đỉnh H1 -> range {i1,H1} -> khoảng cách từ H1 tới current giá phải chiếm hơn 20% của range {i1,H1}  -> retest đúng expectation
- quy ước của CHoCH : khi Swing tăng thành lập [HL,HH,HL,HH] mà giá chạy xuống i2 -> CHoCH giảm, ngược lại Swing giảm thành lập [LH,LL,LH,LL] mà giá chạy lên i2 -> CHoCH tăng
- quy ước của Sweep: khi có CHoCH tăng , giá giảm xuống tạo ra BOS giảm -> ChoCH thành sweep, ngược lại ChoCH giảm - giá tăng lên BOS tăng -> CHoCH thành sweep
- scenario: giá chạy lên -> tìm dc L (giá thấp nhất lúc giá chạy) , array = [L] , range = {i0,+Infinity} -> khi giá chạy tới khi tạo ra retest sẽ tìm dc H -> array = [L,H] , range {i0, i1}
- giả sử 1 của scenario gọi là scenario A: giá chạy qua biên B -> nghĩa là BOS (tăng) -> thì mình bắt đầu đi tìm L thứ 2 và add vào array -> update và add array = [L,H,L] , range = {i2,+Infinity} ->  đợi giá retest để tìm H thứ 2 -> array = [L,H,L,H] dc gọi là swing tăng 2 đáy cao dần, 2 đỉnh cao dần -> update array = [HL,HH,HL,HH] -> giá nằm trong range {i2,i3} -> đây dc gọi là 1 swing tăng hoàn chỉnh khi array equal [HL,HH,HL,HH]
- trường hợp 1: với scenario A gọi là scenario A1 -> [HL,HH,HL,HH] , {i2,i3} -> giá chạy qua i3 -> BOS tăng tiếp diễn -> và tạo ra retest -> như lifecyle , tìm đáy mới add vào array => array = [HL,HH,HL,HH,HL,HH]  range {i4,i5} => tiếp tục scenario của A
- trường hợp 2: với scenario A gọi là scenario A2 -> [HL,HH,HL,HH] , {i2,i3}  -> giá giảm xuống i2 -> CHoCH -> đợi giá retest -> add LL vào array = [HL,HH,HL,HH,LL] , range {i3,i4}-> chỉ cần chứa [HH,LL] === ChoCh giảm 
-  trường hợp 1 của scenario A2 -> array = [HL,HH,HL,HH,LL] , range {i3,i4} -> giá chạy lên i4 và tạo ra retest -> HH mới -> array là [HL,HH,HL,HH,LL,HH] -> từ array sẽ đọc dc kết quả là HL,HH,HL,HH là BOS tăng , đột nhiên có LL thay vì HL => CHoCH , HH,LL,HH => ChoCH sẽ là đổi tên là Sweep và tiếp tục BOS tăng tiếp diễn


- trường hợp 2 của scenario A2 ->  array = [HL,HH,HL,HH,LL] , range {i3,i4} -> giá chạy xuống i3 và tạo ra retest -> tìm đáy và đỉnh sau khi retest và add vô array -> array =  [HL,HH,HL,HH,LL,LH,LL] , range {i5,i6} =>  từ array sẽ đọc dc kết quả là HL,HH,HL,HH là BOS tăng , đột nhiên có LL thay vì HL => ChoCH , và tiếp tục có LH,LL thì ChoCH và tạo ra tiếp BOS giảm , CHoCH chính hiệu ko phải là Sweep 

=============================================
- đây chỉ là 1 ví dụ cho giá bắt đầu xu hướng tăng là những scenario của nó tiếp diễn, còn ngược lại bắt đầu xu hướng giảm thì sẽ có 
- [LH,LL,LH,LL,HH,LL] => nghĩa là LH,LL,LH,LL là xu hướng giảm có BOS giảm , đột nhiên có HH => CHoCH , tiếp theo là LL => BOS giảm , CHoCH đó chính là Sweep , và tiếp tục xu hướng giảm
- [LH,LL,LH,LL,HH,HL,HH] => nghĩa là  LH,LL,LH,LL là xu hướng giảm có BOS giảm , đột nhiên có HH => CHoCH , tiếp theo là HL, HH -> BOS tăng , ChoCH chính là CHoCH xịn , và đổi xu hướng giảm thành xu hướng tăng 


==============================
1. giúp mình verify lại ý tưởng 
2. nếu ý tưởng quá ok -> tạo cho mình 1 file doc , 1 file prompt-ai , 1 file diagram , 1 file flowchat 
3. nếu ý tưởng ko ok -> đề xuất , analysis cho mình  -> cho tới  khi nào ok thì đọc document











-===================================
- ok mình đã đọc và rất hài lòng 
- mình thêm 1 logic nhỏ cho flow tiếp theo

-------------------------
- chắc bạn cũng biết sóng to thì sẽ có sóng nhỏ bên trong , trong sóng có sóng con, trong sóng con có sóng con khác,........ 
sau khi tìm dc CHoCH ko cần biết fake hay real -> mình cần tracking riêng biệt cho ChoCH, (future => tracking BOS cùng xu hướng của chart lớn hơn) hiện tại làm tốt CHoCH trước
- giả sử tạo dc CHoCH với array A [HL,HH,HL,HH,LL] -> init 1 array khác [] gọi là array B và range {i3,i4} === range{start,end} -> array B này sẽ có nhiệm vụ tìm entry cho CHoCH , cũng tương tự cho array A
- range {start,end} , nếu giá chạy ra khỏi range này , thì array B sẽ bị clear hoặc empty => lý do là tracking ChoCH nhưng đã bị phá qua giai đoạn khác
- giá chạy xuống tạo ra ChoCH -> và đợi confirm retest nhỏ (sóng nhỏ) -> mình sẽ có array B = [L,H]  , range {i0,i1}  => và tiếp tục như thế giống arrray A để tìm ra real ChoCH hoặc Sweep 
- nếu real CHoCH === ChoCH+BOS giảm -> entry short
- nếu Sweep === fake ChoCH+BOS tăng -> entry long

=> phase này mình muốn ko cần vô chart nhỏ hơn 2 cấp , vẫn tìm dc entry 


- bạn hỉu ý mình mà phải ko , này là tập làm vụ tìm entry 
- nếu hiểu giúp mình update lại all document và chart flow
